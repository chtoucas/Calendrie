<Project>

  <PropertyGroup>
    <!-- Global context -->
    <ContinuousIntegrationBuild Condition=" '$(ContinuousIntegrationBuild)' == '' ">false</ContinuousIntegrationBuild>
    <ContinuousIntegrationBuild Condition=" '$(GITHUB_ACTIONS)' == 'true' ">true</ContinuousIntegrationBuild>
    <ContinuousIntegrationBuild Condition=" '$(TF_BUILD)' == 'true' ">true</ContinuousIntegrationBuild>

    <!-- WARNING: keep "CalendrieDefaultFramework" in sync with "global.json" -->
    <CalendrieDefaultFramework>net9.0</CalendrieDefaultFramework>
    <!-- Only used by the main library: the default framework and the LTS framework -->
    <CalendrieLibraryFrameworks>net8.0;$(CalendrieDefaultFramework)</CalendrieLibraryFrameworks>

    <CalendrieT4Directory>$(MSBuildThisFileDirectory)src\CodeTemplates\</CalendrieT4Directory>
    <CalendrieT4Assembly>$(MSBuildThisFileDirectory)src\CodeTemplates\Calendrie.TextTemplating.$(VisualStudioVersion).dll</CalendrieT4Assembly>

    <!--
      Lang Version:
        "latest" or "preview"
      Preview Features:
        When we enable Preview Features we do it at the assembly level via
        "GenerateRequiresPreviewFeaturesAttribute" (this is the default behaviour,
        but I prefer to be explicit about this), and for all projects.
    -->
    <LangVersion>latest</LangVersion>
    <EnablePreviewFeatures>false</EnablePreviewFeatures>
    <GenerateRequiresPreviewFeaturesAttribute>false</GenerateRequiresPreviewFeaturesAttribute>
  </PropertyGroup>

  <!-- Common properties -->
  <PropertyGroup>
    <Nullable>enable</Nullable>
    <Deterministic>true</Deterministic>

    <AssemblyOriginatorKeyFile>$(MSBuildThisFileDirectory)Calendrie.snk</AssemblyOriginatorKeyFile>

    <Authors>Tran Ngoc Bich</Authors>
    <!--<Company></Company>-->
    <Product>Calendrie</Product>
    <Copyright>Copyright (c) 2020 Tran Ngoc Bich</Copyright>

    <!-- Version -->
    <VersionPrefix>0.1.0</VersionPrefix>
    <!--<VersionSuffix>DUMMY</VersionSuffix>-->

    <RepositoryType>git</RepositoryType>
    <RepositoryUrl>https://github.com/chtoucas/Calendrie/</RepositoryUrl>

    <IsPackable>false</IsPackable>
    <PackageProjectUrl>$(RepositoryUrl)</PackageProjectUrl>
    <PackageLicenseExpression>BSD-3-Clause</PackageLicenseExpression>

    <!-- In order for C# documentation to be available to F#, we must first build it -->
    <GenerateDocumentationFile>true</GenerateDocumentationFile>

    <!-- Code/Style Analysis
      https://learn.microsoft.com/en-us/dotnet/core/project-sdk/msbuild-props#code-analysis-properties
      https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/overview?tabs=net-9#enable-on-build
    -->
    <EnableNETAnalyzers>true</EnableNETAnalyzers>
    <AnalysisLevel>latest</AnalysisLevel>
    <AnalysisMode>All</AnalysisMode>
    <EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>
    <!-- See .globaconfig for comments -->
    <EnableCodeStyleSeverity>true</EnableCodeStyleSeverity>

    <!-- Reproducible Build
      RestoreLockedMode:
        For CI builds, do not update the lock file.
      DisableImplicitNuGetFallbackFolder:
        Fix error NU1403, and not just for CI builds... It seems that dotnet
        tweaks the packages before putting them within the fallback folder.
        > dotnet nuget locals all -c
    -->
    <RestorePackagesWithLockFile>true</RestorePackagesWithLockFile>
    <RestoreLockedMode Condition=" '$(ContinuousIntegrationBuild)' == 'true' ">true</RestoreLockedMode>
    <DisableImplicitNuGetFallbackFolder>true</DisableImplicitNuGetFallbackFolder>
  </PropertyGroup>

  <!-- Release vs Debug -->
  <Choose>
    <When Condition=" '$(Configuration)' == 'Release' ">
      <PropertyGroup>
        <SignAssembly>true</SignAssembly>
        <CheckForOverflowUnderflow>false</CheckForOverflowUnderflow>

        <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
        <!--
          CS0618  Compiler Warning (level 2) 'member' is obsolete: 'text'
          CS1030  Compiler Warning (level 1) #warning
          CS1591  Missing XML comment for publicly visible type or member 'Type_or_Member'
        -->
        <WarningsNotAsErrors>CS0618;CS1030;CS1591</WarningsNotAsErrors>
        <NoWarn />
      </PropertyGroup>
    </When>

    <Otherwise>
      <PropertyGroup>
        <SignAssembly>false</SignAssembly>
        <CheckForOverflowUnderflow>true</CheckForOverflowUnderflow>

        <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
        <WarningsAsErrors />
        <NoWarn />
      </PropertyGroup>
    </Otherwise>
  </Choose>

</Project>
